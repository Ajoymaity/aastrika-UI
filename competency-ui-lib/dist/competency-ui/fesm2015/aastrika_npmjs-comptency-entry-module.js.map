{"version":3,"file":"aastrika_npmjs-comptency-entry-module.js","sources":["ng://@aastrika_npmjs/comptency/entry-module/components/slef-assessment-entry/slef-assessment-entry.component.ts","ng://@aastrika_npmjs/comptency/entry-module/components/competency-entry/competency-entry.component.ts","ng://@aastrika_npmjs/comptency/entry-module/services/configuration-context.ts","ng://@aastrika_npmjs/comptency/entry-module/services/config.service.ts","ng://@aastrika_npmjs/comptency/entry-module/entry-module.ts","ng://@aastrika_npmjs/comptency/entry-module/aastrika_npmjs-comptency-entry-module.ts"],"sourcesContent":["import { Component, EventEmitter, OnInit, Output } from '@angular/core';\nimport { Router } from '@angular/router';\n@Component({\n  selector: 'lib-slef-assessment-entry',\n  templateUrl: './slef-assessment-entry.component.html',\n  styleUrls: ['./slef-assessment-entry.component.scss']\n})\nexport class SlefAssessmentEntryComponent implements OnInit {\n  @Output() stateChange: EventEmitter<any> = new EventEmitter();\n  constructor(public router:Router) { }\n\n  ngOnInit() {\n  }\n\n  navigateTo(){\n    this.stateChange.emit({'navigation':true})\n  }\n\n}\n","import { Component, EventEmitter, OnInit, Output } from '@angular/core';\n\n@Component({\n  selector: 'lib-competency-entry',\n  templateUrl: './competency-entry.component.html',\n  styleUrls: ['./competency-entry.component.scss']\n})\nexport class CompetencyEntryComponent implements OnInit {\n  @Output() stateChange: EventEmitter<any> = new EventEmitter();\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n  navigateTo(){\n    this.stateChange.emit({'navigation':true})\n  }\n\n}\n","export class ConfigurationContext {\n    config:any\n}\n","import { Inject, Injectable, Optional } from '@angular/core';\nimport { Subject,BehaviorSubject } from 'rxjs';\nimport { ConfigurationContext } from './configuration-context';\n@Injectable({\n  providedIn: 'root'\n})\nexport class ConfigService {\n  public config$: Subject<any> = new BehaviorSubject<any>({});\n  private _config = this.config$.asObservable()\n \n  constructor(@Optional() @Inject('config') public config:ConfigurationContext ) { \n    if(config){\n      console.log('context log in config service ------ ', config)\n      this.setConfig(config)\n    }\n  }\n  public setConfig(context) {\n    this.config$.next(context)\n  }\n  public getConfig(){\n    let config :any \n    this._config.subscribe((res:any)=>{\n      config =  res\n    })\n    return config\n  }\n \n}\n","import { NgModule ,ModuleWithProviders} from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { SlefAssessmentEntryComponent } from './components/slef-assessment-entry/slef-assessment-entry.component';\nimport { CompetencyEntryComponent } from './components/competency-entry/competency-entry.component';\nimport { MatIconModule } from '@angular/material';\nimport { RouterModule } from '@angular/router';\nimport { ConfigurationContext } from './services/configuration-context';\nimport { ConfigService } from './services/config.service';\n@NgModule({\n  declarations: [SlefAssessmentEntryComponent, CompetencyEntryComponent,],\n  imports: [\n    CommonModule,\n    RouterModule,\n    MatIconModule,\n  ],\n  exports: [\n    SlefAssessmentEntryComponent,\n    CompetencyEntryComponent,\n  ],\n  providers:[]\n})\nexport class EntryModule { \n  /**\n * Take the config from consuming apps\n *\n * @author Aman Kumar Sharma <amankumar.sharma@tarento.com>\n */\n  static forRoot(configContext: ConfigurationContext): ModuleWithProviders {\n    return {\n      ngModule: EntryModule,\n      providers: [ConfigService,\n        {provide: 'config', useValue: configContext.config}\n      ]\n    }\n  }\n}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n\nexport {ConfigurationContext as Éµa} from './services/configuration-context';"],"names":["tslib_1.__decorate","tslib_1.__param"],"mappings":";;;;;;;IAOa,4BAA4B,GAAzC,MAAa,4BAA4B;IAEvC,YAAmB,MAAa;QAAb,WAAM,GAAN,MAAM,CAAO;QADtB,gBAAW,GAAsB,IAAI,YAAY,EAAE,CAAC;KACzB;IAErC,QAAQ;KACP;IAED,UAAU;QACR,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,EAAC,YAAY,EAAC,IAAI,EAAC,CAAC,CAAA;KAC3C;CAEF,CAAA;;YAT2B,MAAM;;AADtBA;IAAT,MAAM,EAAE;iEAAqD;AADnD,4BAA4B;IALxC,SAAS,CAAC;QACT,QAAQ,EAAE,2BAA2B;QACrC,6GAAqD;;KAEtD,CAAC;GACW,4BAA4B,CAWxC;;ICXY,wBAAwB,GAArC,MAAa,wBAAwB;IAEnC;QADU,gBAAW,GAAsB,IAAI,YAAY,EAAE,CAAC;KAC7C;IAEjB,QAAQ;KACP;IAED,UAAU;QACR,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,EAAC,YAAY,EAAC,IAAI,EAAC,CAAC,CAAA;KAC3C;CAEF,CAAA;AAVWA;IAAT,MAAM,EAAE;6DAAqD;AADnD,wBAAwB;IALpC,SAAS,CAAC;QACT,QAAQ,EAAE,sBAAsB;QAChC,kHAAgD;;KAEjD,CAAC;GACW,wBAAwB,CAWpC;;MClBY,oBAAoB;CAEhC;;ICIY,aAAa,GAA1B,MAAa,aAAa;IAIxB,YAAiD,MAA2B;QAA3B,WAAM,GAAN,MAAM,CAAqB;QAHrE,YAAO,GAAiB,IAAI,eAAe,CAAM,EAAE,CAAC,CAAC;QACpD,YAAO,GAAG,IAAI,CAAC,OAAO,CAAC,YAAY,EAAE,CAAA;QAG3C,IAAG,MAAM,EAAC;YACR,OAAO,CAAC,GAAG,CAAC,uCAAuC,EAAE,MAAM,CAAC,CAAA;YAC5D,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAA;SACvB;KACF;IACM,SAAS,CAAC,OAAO;QACtB,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,CAAA;KAC3B;IACM,SAAS;QACd,IAAI,MAAW,CAAA;QACf,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC,GAAO;YAC7B,MAAM,GAAI,GAAG,CAAA;SACd,CAAC,CAAA;QACF,OAAO,MAAM,CAAA;KACd;CAEF,CAAA;;YAjByD,oBAAoB,uBAA/D,QAAQ,YAAI,MAAM,SAAC,QAAQ;;;AAJ7B,aAAa;IAHzB,UAAU,CAAC;QACV,UAAU,EAAE,MAAM;KACnB,CAAC;IAKaC,WAAA,QAAQ,EAAE,CAAA,EAAEA,WAAA,MAAM,CAAC,QAAQ,CAAC,CAAA;GAJ9B,aAAa,CAqBzB;;;ICNY,WAAW,mBAAxB,MAAa,WAAW;;;;;;IAMtB,OAAO,OAAO,CAAC,aAAmC;QAChD,OAAO;YACL,QAAQ,EAAE,aAAW;YACrB,SAAS,EAAE,CAAC,aAAa;gBACvB,EAAC,OAAO,EAAE,QAAQ,EAAE,QAAQ,EAAE,aAAa,CAAC,MAAM,EAAC;aACpD;SACF,CAAA;KACF;CACF,CAAA;AAdY,WAAW;IAbvB,QAAQ,CAAC;QACR,YAAY,EAAE,CAAC,4BAA4B,EAAE,wBAAwB,EAAE;QACvE,OAAO,EAAE;YACP,YAAY;YACZ,YAAY;YACZ,aAAa;SACd;QACD,OAAO,EAAE;YACP,4BAA4B;YAC5B,wBAAwB;SACzB;QACD,SAAS,EAAC,EAAE;KACb,CAAC;GACW,WAAW,CAcvB;;ACnCD;;GAEG;;;;"}