{"version":3,"file":"aastrika_npmjs-comptency.js","sources":["ng://@aastrika_npmjs/comptency/entry-module/components/slef-assessment-entry/slef-assessment-entry.component.ts","ng://@aastrika_npmjs/comptency/entry-module/components/competency-entry/competency-entry.component.ts","ng://@aastrika_npmjs/comptency/entry-module/services/configuration-context.ts","ng://@aastrika_npmjs/comptency/entry-module/services/config.service.ts","ng://@aastrika_npmjs/comptency/entry-module/entry-module.ts","ng://@aastrika_npmjs/comptency/self-assessment/service/self-assessment.service.ts","ng://@aastrika_npmjs/comptency/self-assessment/components/self-assessment-card/self-assessment-card.component.ts","ng://@aastrika_npmjs/comptency/self-assessment/service/request-util.service.ts","ng://@aastrika_npmjs/comptency/self-assessment/components/self-assessment/self-assessment.component.ts","ng://@aastrika_npmjs/comptency/self-assessment/self-assessment.module.ts","ng://@aastrika_npmjs/comptency/competency/services/request-util.ts","ng://@aastrika_npmjs/comptency/competency/services/required-competency.service.ts","ng://@aastrika_npmjs/comptency/competency/components/required-comptency-card/required-comptency-card.component.ts","ng://@aastrika_npmjs/comptency/competency/services/gained.service.ts","ng://@aastrika_npmjs/comptency/competency/components/gained-comptency-card/gained-comptency-card.component.ts","ng://@aastrika_npmjs/comptency/competency/components/competency-dashboard/competency-dashboard.component.ts","ng://@aastrika_npmjs/comptency/competency/services/active-summary.service.ts","ng://@aastrika_npmjs/comptency/competency/components/active-summary/active-summary.component.ts","ng://@aastrika_npmjs/comptency/competency/competency.module.ts","ng://@aastrika_npmjs/comptency/public-api.ts","ng://@aastrika_npmjs/comptency/aastrika_npmjs-comptency.ts"],"sourcesContent":["import { Component, EventEmitter, OnInit, Output } from '@angular/core';\nimport { Router } from '@angular/router';\n@Component({\n  selector: 'lib-slef-assessment-entry',\n  templateUrl: './slef-assessment-entry.component.html',\n  styleUrls: ['./slef-assessment-entry.component.scss']\n})\nexport class SlefAssessmentEntryComponent implements OnInit {\n  @Output() stateChange: EventEmitter<any> = new EventEmitter();\n  constructor(public router:Router) { }\n\n  ngOnInit() {\n  }\n\n  navigateTo(){\n    this.stateChange.emit({'navigation':true})\n  }\n\n}\n","import { Component, EventEmitter, OnInit, Output } from '@angular/core';\n\n@Component({\n  selector: 'lib-competency-entry',\n  templateUrl: './competency-entry.component.html',\n  styleUrls: ['./competency-entry.component.scss']\n})\nexport class CompetencyEntryComponent implements OnInit {\n  @Output() stateChange: EventEmitter<any> = new EventEmitter();\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n  navigateTo(){\n    this.stateChange.emit({'navigation':true})\n  }\n\n}\n","export class ConfigurationContext {\n    config:any\n}\n","import { Inject, Injectable, Optional } from '@angular/core';\nimport { Subject,BehaviorSubject } from 'rxjs';\nimport { ConfigurationContext } from './configuration-context';\n@Injectable({\n  providedIn: 'root'\n})\nexport class ConfigService {\n  public config$: Subject<any> = new BehaviorSubject<any>({});\n  private _config = this.config$.asObservable()\n \n  constructor(@Optional() @Inject('config') public config:ConfigurationContext ) { \n    if(config){\n      console.log('context log in config service ------ ', config)\n      this.setConfig(config)\n    }\n  }\n  public setConfig(context) {\n    this.config$.next(context)\n  }\n  public getConfig(){\n    let config :any \n    this._config.subscribe((res:any)=>{\n      config =  res\n    })\n    return config\n  }\n \n}\n","import { NgModule ,ModuleWithProviders} from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { SlefAssessmentEntryComponent } from './components/slef-assessment-entry/slef-assessment-entry.component';\nimport { CompetencyEntryComponent } from './components/competency-entry/competency-entry.component';\nimport { MatIconModule } from '@angular/material';\nimport { RouterModule } from '@angular/router';\nimport { ConfigurationContext } from './services/configuration-context';\nimport { ConfigService } from './services/config.service';\n@NgModule({\n  declarations: [SlefAssessmentEntryComponent, CompetencyEntryComponent,],\n  imports: [\n    CommonModule,\n    RouterModule,\n    MatIconModule,\n  ],\n  exports: [\n    SlefAssessmentEntryComponent,\n    CompetencyEntryComponent,\n  ],\n  providers:[]\n})\nexport class EntryModule { \n  /**\n * Take the config from consuming apps\n *\n * @author Aman Kumar Sharma <amankumar.sharma@tarento.com>\n */\n  static forRoot(configContext: ConfigurationContext): ModuleWithProviders {\n    return {\n      ngModule: EntryModule,\n      providers: [ConfigService,\n        {provide: 'config', useValue: configContext.config}\n      ]\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { DataService } from '@aastrika_npmjs/comptency/core';\nimport { HttpClient } from '@angular/common/http';\nimport { urlConfig  } from '@aastrika_npmjs/comptency/core';\nimport { BehaviorSubject, Subject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SelfAssessmentService extends DataService {\n  public  startAssessment = new BehaviorSubject<any>(undefined);\n  startAssessment$ = this.startAssessment.asObservable();\n  constructor(http:HttpClient) {\n    super(http)\n  }\n\n  /**\n   *searching for the content Identifier\n   * \n   */\n  public getCompetencyCourseIdentifier(reqBody:any){ \n   \n    const httpOptions: any = {\n      url: urlConfig.getSearch(),\n      data: reqBody\n    };\n    \n    return this.post(httpOptions)\n  }\n\n   /**\n   *getting the details of course by pasing the identifier and hierarchyType\n   * \n   */\n\n  public fetchHiearchyDetails(identifier, hierarchyType){\n    \n    const httpOptions: any = {\n      url: urlConfig.getHierachyDetails(identifier, hierarchyType),\n    };\n    return this.get(httpOptions)\n  }\n\n\n}\n","import { Component, Input, OnInit } from '@angular/core';\nimport { SelfAssessmentService } from '../../service/self-assessment.service';\n@Component({\n  selector: 'lib-self-assessment-card',\n  templateUrl: './self-assessment-card.component.html',\n  styleUrls: ['./self-assessment-card.component.scss']\n})\nexport class SelfAssessmentCardComponent implements OnInit {\n\n  @Input() cardData: any\n\n\n  constructor(  private selfAssessmentService : SelfAssessmentService,) { }\n\n  ngOnInit() {\n  }\n  startSelfAssesment(data:any){\n    this.selfAssessmentService.startAssessment.next(data)\n  }\n}\n","import { Injectable } from '@angular/core';\nimport * as _ from 'lodash-es';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RequestUtil {\n\n  constructor() { }\n\n  formatedcompetencyData(data:any){\n    const result = []\n    if(_.get(data,'result')){\n      if(_.get(data,'result.content').competency === true){\n        const children =  _.get(data, 'result.content').children\n\n        if(children.length > 0){\n         _.forEach(children, (value:any)=>{\n            result.push({\n              'title':  _.get(value, 'name'),\n              'courseId': _.get(value, 'parent'),\n              'contentId': _.get(value,'identifier'),\n              'contentType':_.get(value,'contentType'),\n              'artifactUrl':_.get(value,'artifactUrl'),\n            })\n           })\n           return result\n        }\n      }\n\n    }\n  }\n\n  formatedCompetencyCourseData(data:any){\n    const result = []\n    if(_.get(data,'result')){\n      const content =  _.get(data, 'result.content')\n      if(content.length > 0){\n         _.forEach(content, (value:any)=>{\n            result.push({\n              'title':  _.get(value, 'name'),\n              'contentId': _.get(value,'identifier'),\n              'contentType':_.get(value,'contentType'),\n              'subTitle': _.get(value,'subTitle'),\n              'description': _.get(value,'description'),\n              'creator': _.get(value,'creator'),\n              'duration': _.get(value,'duration')\n\n            })\n           })\n           return result\n        }\n      \n\n    }\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Location } from '@angular/common'\nimport { SelfAssessmentService } from '../../service/self-assessment.service';\nimport { RequestUtil } from '../../service/request-util.service';\nimport { map, mergeMap } from 'rxjs/operators';\nimport * as _ from 'lodash-es';\nimport { of } from 'rxjs';\n\n@Component({\n  selector: 'lib-self-assessment',\n  templateUrl: './self-assessment.component.html',\n  styleUrls: ['./self-assessment.component.scss']\n})\nexport class SelfAssessmentComponent implements OnInit {\n\n  selfAssessmentData = []\n  requestUtil: any\n  loading = false\n  constructor(\n    private location: Location,\n    private selfAssessmentService : SelfAssessmentService,\n  ) { \n\n    this.requestUtil = new RequestUtil()\n  }\n  /**\n   *getting the details of course by pasing the identifier and hierarchyType\n   * \n   */\n  ngOnInit() {\n    this.loading = true\n    this.getCompetencyCourse().pipe(map((res:any)=>{\n      const formatedResponse =  this.requestUtil.formatedCompetencyCourseData(res)\n      return formatedResponse\n    })).subscribe((res)=>{\n      this.selfAssessmentData = res\n      this.loading = false\n    })\n    this.selfAssessmentService.startAssessment$.pipe().subscribe((res:any)=>{\n      console.log(res)\n      /**\n   * here we will redirect to player screen \n   * \n   */\n    })\n  }\n\n  getCompetencyCourse(){\n    const reqBody = {\n      \"request\": {\n          \"filters\": {\n              \"primaryCategory\": [\n                  \"Course\"\n              ],\n              \"contentType\": [\n                  \"Course\"\n              ],\n              \"status\": [\n                  \"Live\"\n              ],\n              \"competency\":true\n          }\n      },\n      \"query\": \"\",\n      \"sort\": [\n          {\n              \"lastUpdatedOn\": \"desc\"\n          }\n      ]\n  }\n    return  this.selfAssessmentService.getCompetencyCourseIdentifier(reqBody)\n  }\n  \n\n  navigateBack() {\n    this.location.back()\n  }\n\n}\n","import { NgModule  } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { SelfAssessmentCardComponent } from './components/self-assessment-card/self-assessment-card.component';\nimport { SelfAssessmentComponent } from './components/self-assessment/self-assessment.component';\nimport { MatIconModule } from '@angular/material';\nimport { HttpClientModule } from '@angular/common/http';\nimport { CoreModule } from '@aastrika_npmjs/comptency/core';\n\n\n\n@NgModule({\n  declarations: [SelfAssessmentCardComponent, SelfAssessmentComponent],\n  imports: [\n    CommonModule,\n    MatIconModule,\n    HttpClientModule,\n    CoreModule\n  ],\n  exports:[SelfAssessmentCardComponent, SelfAssessmentComponent]\n})\nexport class SelfAssessmentModule { }\n","import * as _ from 'lodash-es';\nexport class RequestUtil {\n  formatedActivities = (data: any) => {\n    if (!_.isEmpty(data)) {\n      return data\n    }\n\n  }\n  formatedActivitityByPostion = (data: any) => {\n    if (_.get(data, 'result')) {\n      const children = _.get(data, 'result.response').children\n      if (children.length > 0) {\n        const result = _.reduce(children, (result, value) => {\n          result.push({\n            'roles': _.get(value, 'name'),\n            'id': _.get(value, 'id'),\n            'description': _.get(value, 'description'),\n          })\n          return result\n        }, [])\n        return result\n      }\n\n    }\n\n  }\n  formatedActivitityByRoleId = (data: any) => {\n    if (_.get(data, 'result')) {\n      const children = _.get(data, 'result.response').children\n      if (children.length > 0) {\n        const result = _.reduce(children, (result, value) => {\n          result.push({\n            'title': _.get(value, 'name'),\n            'cid': _.get(value, 'id'),\n            'description': _.get(value, 'description')\n          })\n          return result\n        },[])\n        return result\n      }\n\n    }\n\n  }\n  formatedCompetency = (data: any) => {\n    let result = []\n    _.forEach(data,(data:any)=>{\n      if (_.get(data, 'result')) {\n        const children = _.get(data, 'result.response').children\n        if (children.length > 0) {\n          _.forEach(children, (value:any)=>{\n            result.push({\n              'competency': _.get(value, 'name'),\n              'id': _.get(value, 'id'),\n              'description': _.get(value, 'description'),\n              'levels': ['Level 4', 'Level 5'],\n              'cid': _.get(data, 'result.response').id\n            })\n          })\n        }\n      }\n    })\n    return result\n  }\n\n  /**\n * util method to formate the gained competency  \n * for user \n */\n\n  formatedGainedCompetency(entity:any, passbook:any){\n    let response = []\n    _.forEach(entity,(value:any)=>{\n        const cid =   _.get(value, 'id')\n        _.forEach(passbook,(passbookValue:any)=>{\n           if(passbookValue.competencies.hasOwnProperty(cid)){\n              const competency =  passbookValue.competencies[cid]\n              response.push({\n                'title': _.get(competency,'additionalParams.competencyName'),\n                'logs': this.acquiredPassbookLogs(_.get(competency, 'acquiredDetails')),\n                'proficiencyLevels': this.acauiredChannelColourCode(_.get(competency, 'acquiredDetails'))\n              })\n              \n            }\n        })\n    })\n    return response\n  }\n  acquiredPassbookLogs(acquiredDetails:any){\n    let response  = []\n    if(acquiredDetails.length>0){\n      _.forEach(acquiredDetails,(value:any)=>{\n          response.push({\n            'header': _.get(value, 'courseName') ? _.get(value, 'courseName') : '',\n            'date':  _.get(value,'createdDate'),\n            'description': _.get(value, 'additionalParams.description'),\n            'keyboardArrowUp':true,\n            'level': _.get(value,'competencyLevelId')\n          })\n      })\n    }\n   return response\n  }\n  acauiredChannelColourCode(acquiredDetails:any){\n    let response  = [\n     {\n       'color': '#FFFBB0',\n       'displayLevel': 1,\n       'selected': false,\n     },\n     {\n       'color': '#FFFBB0',\n       'displayLevel': 2,\n       'selected': false,\n     },\n     {\n       'color': '#FFFBB0',\n       'displayLevel': 3,\n       'selected': false,\n     },\n     {\n       'color': '#FFFBB0',\n       'displayLevel': 4,\n       'selected': false,\n     },\n     {\n       'color': '#FFFBB0',\n       'displayLevel': 5,\n       'selected': false,\n     }\n    ]\n   \n   _.forEach(acquiredDetails,(value:any)=>{\n       const channel = _.get(value,'acquiredChannel')\n       switch(channel) {\n         case 'course':{\n           _.forEach(response, (level:any)=>{\n             if(level.displayLevel == _.get(value,'competencyLevelId')){\n               level.color = '#FFFBB0';\n               level.selected = true\n             }\n           } )\n           \n           break; \n         }\n         case 'selfAssessment':{\n           _.forEach(response, (level:any)=>{\n             if(level.displayLevel == _.get(value,'competencyLevelId')){\n               level.color = '#7CB5E6';\n               level.selected = true\n               \n             }\n           } )\n         \n           break; \n         }\n         case 'admin':{\n           _.forEach(response, (level:any)=>{\n             if(level.displayLevel == _.get(value,'competencyLevelId')){\n               level.color = '#A4DFCA';\n               level.selected = true\n             }\n           } )\n           \n           break; \n         }\n         default: { \n           _.forEach(response, (level:any)=>{\n             if(level.displayLevel == _.get(value,'competencyLevelId')){\n               level.color = '#FFFBB0';\n               level.selected = false;\n             }\n           } )\n           \n           break; \n         }\n       }\n   })\n   return response\n }\n}\n\n\n\n","import { Injectable } from '@angular/core';\nimport { DataService } from '@aastrika_npmjs/comptency/core';\nimport { HttpClient } from '@angular/common/http';\nimport { urlConfig  } from '@aastrika_npmjs/comptency/core';\n/**\n * RequiredCompetencyService to extend Data Service \n *\n * @author Mansur Shaik <mansur.shaik@tarento.com>\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class RequiredCompetencyService extends DataService {\n\n  constructor(http:HttpClient) {\n    super(http)\n   }\n\n  /**\n   * for making getall required competency api calls\n   * \n   */\n\n   public getRequiredCompetencyById(reqBody:any){\n    const httpOptions: any = {\n      url: urlConfig.getEntityById(3),\n      data: reqBody\n    };\n    console.log('reqBody',httpOptions)\n    return this.post(httpOptions)\n  }\n  \n}\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { of, Subscription } from 'rxjs';\nimport { mergeMap } from 'rxjs/operators';\nimport { RequestUtil } from '../../services/request-util';\nimport { RequiredCompetencyService } from '../../services/required-competency.service';\n\n@Component({\n  selector: 'lib-required-comptency-card',\n  templateUrl: './required-comptency-card.component.html',\n  styleUrls: ['./required-comptency-card.component.scss']\n})\nexport class RequiredComptencyCardComponent implements OnInit, OnDestroy {\n\n  competencyData = [\n    {\n      title: 'Procurement and Distribution of HCM',\n      description: 'Manages procurement and store raw materials for HCMs as per the pre-decided menu Supervises the preparation and distribution of HCM by Anganwadi Helper (AWH)',\n      requiredLevel: 'level 4'\n    },\n    {\n      title: 'Store management and planning and coordination of THR and Dry ration',\n      description: 'Mobilizes children and conducts ECCE activities as per the yearly activity calendar and the ECCE manual ',\n      requiredLevel: 'level 4'\n    },\n    {\n      title: 'Procurement and Distribution of HCM',\n      description: 'Manages procurement and store raw materials for HCMs as per the pre-decided menu Supervises the preparation and distribution of HCM by Anganwadi Helper (AWH)',\n      requiredLevel: 'level 4'\n    },\n    {\n      title: 'Early Childhood Care Education',\n      description: 'Mobilizes children and conducts ECCE activities as per the yearly activity calendar and the ECCE manual ',\n      requiredLevel: 'level 4'\n    },\n    {\n      title: 'Procurement and Distribution of HCM',\n      description: 'Manages procurement and store raw materials for HCMs as per the pre-decided menu Supervises the preparation and distribution of HCM by Anganwadi Helper (AWH)',\n      requiredLevel: 'level 4'\n    },\n    {\n      title: 'Early Childhood Care Education',\n      description: 'Mobilizes children and conducts ECCE activities as per the yearly activity calendar and the ECCE manual ',\n      requiredLevel: 'level 4'\n    },\n  ]\n\n  panelOpenState: Boolean = true\n  customCollapsedHeight = '100px'\n  customExpandedHeight = '100px'\n  private unsubscribe: Subscription;\n  requestUtil: any\n  loading = false\n\n  constructor(\n    private requiredCompetencyService: RequiredCompetencyService\n  ) { \n    this.requestUtil = new RequestUtil()\n  }\n\n  ngOnInit() {\n    // this.loading = true\n    this.unsubscribe = this.getRequiredByPostion().pipe(mergeMap((res:any)=>{\n      const formatedResponse =  this.requestUtil.formatedActivitityById(res)\n      return of(formatedResponse)\n    })).subscribe((res: any) => {\n      console.log(res)\n    })\n  }\n\n  private getRequiredByPostion() {\n    const reqBody = {\n      filter: {\n        \"isDetail\": true\n      }\n    };\n    return this.requiredCompetencyService.getRequiredCompetencyById(reqBody)\n  }\n\n  logs = [\n    {\n      index: 1,\n      header: 'Understands HCM guidelines',\n    },\n    {\n      index: 2,\n      header: 'Lists raw material required',\n    },\n    {\n      index: 3,\n      header: 'Plans for storage',\n    },\n    {\n      index: 4,\n      header: 'Motivates the AWH and children on optimal hygiene and handwashing practices',\n    },\n    {\n      index: 5,\n      header: 'Course-Name Completion',\n    },\n    \n  ]\n  \n  ngOnDestroy() {\n    this.unsubscribe.unsubscribe()\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { DataService, urlConfig } from '@aastrika_npmjs/comptency/core';\nimport { HttpClient } from '@angular/common/http';\nimport { forkJoin, Observable } from 'rxjs';\n\n/**\n * GainedService to extend Data Service \n *\n * @author Vishali Sakar <vishali.sakar@tarento.com>\n */\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GainedService extends DataService {\n\n  constructor(http:HttpClient) {\n    super(http)\n  }\n\n  /**\n   * for making getall Gained api calls\n   * \n   */\n\n   public fetchUserPassbook(reqBody:any){\n    \n    const httpOptions: any = {\n      url: urlConfig.getUserPassbook(),\n      data: reqBody\n    };\n    return this.post(httpOptions)\n  }\n\n  \n  public fetchAllEntity(reqBody:any){\n    \n    const httpOptions: any = {\n      url: urlConfig.getAllEntity(),\n      data: reqBody\n    };\n    return this.post(httpOptions)\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { pipe } from 'rxjs';\nimport { forkJoin } from 'rxjs';\nimport { GainedService } from '../../services/gained.service';\nimport { RequestUtil } from '../../services/request-util';\nimport * as _ from 'lodash-es';\n@Component({\n  selector: 'lib-gained-comptency-card',\n  templateUrl: './gained-comptency-card.component.html',\n  styleUrls: ['./gained-comptency-card.component.scss']\n})\nexport class GainedComptencyCardComponent implements OnInit {\n\n  requestUtil: any\n  loading = false\n  panelOpenState: Boolean = false;\n  gainedproficencyData:any\n  constructor(\n    public gainedService: GainedService\n\n  ) {\n    this.requestUtil = new RequestUtil()\n  }\n\n  ngOnInit() {\n    this.loading = true\n    const allEntity = this.getAllEntity()\n    const userPassbook = this.getAllUserPassbook()\n    forkJoin([allEntity,userPassbook]).subscribe((res)=>{\n      const response = this.requestUtil.formatedGainedCompetency(res[0].result.response, res[1].result.content)\n      this.gainedproficencyData = response\n      this.loading = false\n    })\n  }\n \n  private getAllUserPassbook() {\n    const reqBody = {\n      \"request\": {\n        \"typeName\": \"competency\"\n      }\n    };\n    return this.gainedService.fetchUserPassbook(reqBody)\n  }\n\n\n  private getAllEntity() {\n    const reqBody = {\n      \"search\": {\n        \"type\": \"Competency\"\n      }\n    };\n    return  this.gainedService.fetchAllEntity(reqBody)\n  }\n}\n","import { Component, EventEmitter, OnInit, Output } from '@angular/core';\nimport { Location } from '@angular/common'\n\n@Component({\n  selector: 'lib-competency-dashboard',\n  templateUrl: './competency-dashboard.component.html',\n  styleUrls: ['./competency-dashboard.component.scss']\n})\nexport class CompetencyDashboardComponent implements OnInit {\n  @Output() stateChange: EventEmitter<any> = new EventEmitter();\n  tabIndex = 0;\n  constructor(private location: Location) {\n   }\n\n  ngOnInit() {\n  }\n\n  navigateBack() {\n    this.location.back()\n  }\n  changeTab(event:any){\n    this.tabIndex = event.index;\n  }\n  startSelfAssessment() {\n    this.stateChange.emit({'navigation':true})\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { DataService } from '@aastrika_npmjs/comptency/core';\nimport { HttpClient } from '@angular/common/http';\nimport { urlConfig  } from '@aastrika_npmjs/comptency/core';\n/**\n * ActiveSummaryService to extend Data Service \n *\n * @author Aman Kumar Sharma <amankumar.sharma@tarento.com>\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class ActiveSummaryService extends DataService {\n\n  constructor(http:HttpClient) {\n    super(http)\n  }\n\n   /**\n   * for making getall activity api calls\n   * \n   */\n    public getActivityById(reqBody:any){\n      // console.log('calling getActivityById>>')\n      const httpOptions: any = {\n        url: urlConfig.getEntityById(reqBody.id),\n        data: reqBody\n      };\n      // console.log('reqBody',httpOptions)\n      return this.post(httpOptions)\n    }\n}\n","import { Component, OnInit,OnDestroy } from '@angular/core';\nimport { RequestUtil } from '../../services/request-util';\nimport { ActiveSummaryService } from '../../services/active-summary.service';\nimport { mergeMap } from 'rxjs/operators';\nimport { forkJoin, of, Subscription } from 'rxjs';\nimport * as _ from 'lodash-es';\nimport { ConfigService } from '@aastrika_npmjs/comptency/entry-module';\n@Component({\n  selector: 'lib-active-summary',\n  templateUrl: './active-summary.component.html',\n  styleUrls: ['./active-summary.component.scss']\n})\nexport class ActiveSummaryComponent implements OnInit {\n  /**\n * Core Module  \n *\n * @author Aman Kumar Sharma <amankumar.sharma@tarento.com>\n */\n  panelOpenState: Boolean = true\n  requestUtil: any\n  private unsubscribe: Subscription;\n  roleactivitySummaries:any\n  activitySummaries:any\n  loading = false\n  acordianLoading = false\n  profileData:any\n  constructor(public activeSummaryService: ActiveSummaryService, public configService: ConfigService) {\n    this.requestUtil = new RequestUtil()\n    this.profileData = this.configService.getConfig()!.profileData[0].designation\n  }\n\n  ngOnInit() {\n    setTimeout(()=>{\n      this.loading = true\n   this.unsubscribe = this.getActivityByRole().pipe(mergeMap((res:any)=>{\n      const formatedResponse =  this.requestUtil.formatedActivitityByPostion(res)\n      return of(formatedResponse)\n    })).subscribe((res: any) => {\n      this.loading = false\n      this.roleactivitySummaries = res\n    })\n    },500)\n  }\n\n  private getActivityByRole() {\n    const reqBody = {\n      filter: {\n        \"isDetail\": true\n      },\n      id: this.profileData === 'AWW' ? 95 : 1\n    };\n    return this.activeSummaryService.getActivityById(reqBody)\n  }\n\n  public getActivityByRoleId(id:any){\n    this.panelOpenState = true\n    this.acordianLoading = true\n    const index = _.findIndex(this.roleactivitySummaries, {'id': id})\n    this.roleactivitySummaries[index]['activities'] = []\n    this.getEntityById(id).pipe(mergeMap((res)=>{\n      const respone = this.requestUtil.formatedActivitityByRoleId(res)\n      this.roleactivitySummaries[index]['activities'] = respone\n      const cidArr = _.map(this.roleactivitySummaries[index]['activities'], 'cid')\n      let calls = [];\n      _.forEach(cidArr,(value:any)=>{\n        calls.push(this.getEntityById(value))\n      })\n      this.acordianLoading = false\n      return forkJoin(...calls)\n    })).subscribe((res:any)=>{\n      \n      const response = this.requestUtil.formatedCompetency(res)\n      this.roleactivitySummaries[index]['activities'] = _.values( _.merge(_.keyBy(response, 'cid'), \n           _.keyBy(this.roleactivitySummaries[index]['activities'], 'cid')))\n    })\n    \n  }\n  getEntityById(id:any){\n    const reqBody = {\n      filter: {\n        \"isDetail\": true\n      },\n      id: id\n    };\n    return this.activeSummaryService.getActivityById(reqBody)\n  }\n  ngOnDestroy() {\n    this.unsubscribe.unsubscribe()\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport {  HttpClientModule } from '@angular/common/http'\nimport { RequiredComptencyCardComponent } from './components/required-comptency-card/required-comptency-card.component';\nimport { GainedComptencyCardComponent } from './components/gained-comptency-card/gained-comptency-card.component';\nimport { CompetencyDashboardComponent } from './components/competency-dashboard/competency-dashboard.component';\nimport { ActiveSummaryComponent } from './components/active-summary/active-summary.component';\nimport { MatTabsModule, MatIconModule, MatExpansionModule } from '@angular/material';\nimport { CoreModule } from '@aastrika_npmjs/comptency/core';\n@NgModule({\n  declarations: [\n    RequiredComptencyCardComponent, \n    GainedComptencyCardComponent, \n    CompetencyDashboardComponent, \n    ActiveSummaryComponent],\n  imports: [\n    CommonModule,\n    MatTabsModule,\n    MatIconModule,\n    MatExpansionModule,\n    HttpClientModule,\n    CoreModule\n  ],\n  exports: [RequiredComptencyCardComponent,\n    GainedComptencyCardComponent,\n    CompetencyDashboardComponent,\n    ActiveSummaryComponent\n  ]\n})\nexport class CompetencyModule { }\n","/*\n * Public API Surface of competency-ui\n */\n\nexport * from  './entry-module/entry-module'\nexport * from './self-assessment/self-assessment.module'\nexport * from './competency/competency.module'","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n\nexport {ActiveSummaryComponent as ɵm} from './competency/components/active-summary/active-summary.component';\nexport {CompetencyDashboardComponent as ɵl} from './competency/components/competency-dashboard/competency-dashboard.component';\nexport {GainedComptencyCardComponent as ɵj} from './competency/components/gained-comptency-card/gained-comptency-card.component';\nexport {RequiredComptencyCardComponent as ɵh} from './competency/components/required-comptency-card/required-comptency-card.component';\nexport {ActiveSummaryService as ɵn} from './competency/services/active-summary.service';\nexport {GainedService as ɵk} from './competency/services/gained.service';\nexport {RequiredCompetencyService as ɵi} from './competency/services/required-competency.service';\nexport {CompetencyEntryComponent as ɵb} from './entry-module/components/competency-entry/competency-entry.component';\nexport {SlefAssessmentEntryComponent as ɵa} from './entry-module/components/slef-assessment-entry/slef-assessment-entry.component';\nexport {ConfigService as ɵc} from './entry-module/services/config.service';\nexport {ConfigurationContext as ɵd} from './entry-module/services/configuration-context';\nexport {SelfAssessmentCardComponent as ɵe} from './self-assessment/components/self-assessment-card/self-assessment-card.component';\nexport {SelfAssessmentComponent as ɵg} from './self-assessment/components/self-assessment/self-assessment.component';\nexport {SelfAssessmentService as ɵf} from './self-assessment/service/self-assessment.service';"],"names":["tslib_1.__decorate","tslib_1.__param","_.get","_.forEach","RequestUtil","_.isEmpty","_.reduce","_.findIndex","_.map","_.values","_.merge","_.keyBy","ConfigService"],"mappings":"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"}